{"version":3,"sources":["add-meeting.component.ts"],"names":[],"mappings":"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","file":"add-meeting.component.js","sourcesContent":["import { Component, OnInit,ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef, } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-add-meeting',\n  templateUrl: './add-meeting.component.html',\n  styleUrls: ['./add-meeting.component.css']\n})\nexport class AddMeetingComponent implements OnInit {\n  allRooms = [{id:1, name: 'Room 1', status:'Available'},{id:2, name: 'Room 2', status:'Available'},{id:3, name: 'Room 3', status:'Available'},{id:4, name: 'Room 4', status:'Available'},{id:5, name: 'Room 5', status:'Available'},{id:6, name: 'Room 6', status:'Available'},{id:7, name: 'Room 7', status:'Available'},{id:8, name: 'Room 8', status:'Available'},{id:9, name: 'Room 9',status:'Available'},{id:10, name: 'Room 10', status:'Available'},];\n  \n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getStatus();\n  }\n\n  getStatus(){\n    for(let x = 0; x < this.allRooms.length; x++){\n      this.http.post('http://localhost:8080/get_rooms',  {id:this.allRooms[x].id}).subscribe((res)=>{\n        if(res['response'][0]){\n          if(this.allRooms[x].id == res['response'][0].room_id){\n            this.allRooms[x]['meetings'] = res['response'];\n\n            this.allRooms[x]['meetings'].forEach(ele => {\n\n              let currentDate = new Date();\n              const sTime = ele.start_time;\n              const t1: any = sTime.split(' ');\n              const t2: any = t1[0].split(':');\n              t2[0] = (t1[1] === 'PM' ? (1*t2[0] + 12) : t2[0]);\n              const time24 = (t2[0] < 10 ? '0' + t2[0] : t2[0]) + ':' + t2[1];\n\n              const eTime = ele.end_time;\n              const et1: any = eTime.split(' ');\n              const et2: any = et1[0].split(':');\n              et2[0] = (et1[1] === 'PM' ? (1*et2[0] + 12) : et2[0]);\n              const etime24 = (et2[0] < 10 ? '0' + et2[0] : et2[0]) + ':' + et2[1];\n            \n              const xy = new Date(currentDate);\n              const cTime = xy.getHours() + ':' + xy.getMinutes()\n               console.log(ele);\n              if(time24 <= cTime && etime24 >= cTime){\n                this.allRooms[x].status = 'Booked by ' + ele.name + ' - Duration :' + time24 + ' - ' +etime24;\n              } else {\n                this.allRooms[x].status = 'Available';\n              }\n            });\n          }\n        }\n      });  \n    }\n  }\n\n  getRandomColor() {\n    var color = Math.floor(0x1000000 * Math.random()).toString(16);\n    return '#' + ('000000' + color).slice(-6);\n  }\n}"]}