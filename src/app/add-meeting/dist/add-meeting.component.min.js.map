{"version":3,"sources":["add-meeting.component.ts"],"names":["core_1","require","AddMeetingComponent","http","this","allRooms","id","name","status","prototype","ngOnInit","getStatus","_this","x","this_1","post","subscribe","res","room_id","forEach","ele","currentDate","Date","t1","start_time","split","t2","time24","et1","end_time","et2","etime24","xy","cTime","getHours","getMinutes","console","log","length","getRandomColor","Math","floor","random","toString","slice","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAYAC,oBAAA,WAGE,SAAAA,EAAoBC,GAAAC,KAAAD,KAAAA,EAFpBC,KAAAC,SAAW,CAAC,CAACC,GAAG,EAAGC,KAAM,SAAUC,OAAO,aAAa,CAACF,GAAG,EAAGC,KAAM,SAAUC,OAAO,aAAa,CAACF,GAAG,EAAGC,KAAM,SAAUC,OAAO,aAAa,CAACF,GAAG,EAAGC,KAAM,SAAUC,OAAO,aAAa,CAACF,GAAG,EAAGC,KAAM,SAAUC,OAAO,aAAa,CAACF,GAAG,EAAGC,KAAM,SAAUC,OAAO,aAAa,CAACF,GAAG,EAAGC,KAAM,SAAUC,OAAO,aAAa,CAACF,GAAG,EAAGC,KAAM,SAAUC,OAAO,aAAa,CAACF,GAAG,EAAGC,KAAM,SAASC,OAAO,aAAa,CAACF,GAAG,GAAIC,KAAM,UAAWC,OAAO,cAiDhb,OA7CEN,EAAAO,UAAAC,SAAA,WACEN,KAAKO,aAGPT,EAAAO,UAAAE,UAAA,WACE,IADF,IAAAC,EAAAR,gBACUS,GACNC,EAAKX,KAAKY,KAAK,kCAAoC,CAACT,GAAGQ,EAAKT,SAASQ,GAAGP,KAAKU,UAAU,SAACC,GACnFA,EAAc,SAAE,IACdL,EAAKP,SAASQ,GAAGP,IAAMW,EAAc,SAAE,GAAGC,UAC3CN,EAAKP,SAASQ,GAAa,SAAII,EAAc,SAE7CL,EAAKP,SAASQ,GAAa,SAAEM,QAAQ,SAAAC,GAEnC,IAAIC,EAAc,IAAIC,KAEhBC,EADQH,EAAII,WACIC,MAAM,KACtBC,EAAUH,EAAG,GAAGE,MAAM,KAC5BC,EAAG,GAAgB,OAAVH,EAAG,GAAe,EAAEG,EAAG,GAAK,GAAMA,EAAG,GAC9C,IAAMC,GAAUD,EAAG,GAAK,GAAK,IAAMA,EAAG,GAAKA,EAAG,IAAM,IAAMA,EAAG,GAGvDE,EADQR,EAAIS,SACKJ,MAAM,KACvBK,EAAWF,EAAI,GAAGH,MAAM,KAC9BK,EAAI,GAAiB,OAAXF,EAAI,GAAe,EAAEE,EAAI,GAAK,GAAMA,EAAI,GAClD,IAAMC,GAAWD,EAAI,GAAK,GAAK,IAAMA,EAAI,GAAKA,EAAI,IAAM,IAAMA,EAAI,GAE5DE,EAAK,IAAIV,KAAKD,GACdY,EAAQD,EAAGE,WAAa,IAAMF,EAAGG,aACtCC,QAAQC,IAAIjB,GAEXR,EAAKP,SAASQ,GAAGL,OADhBmB,GAAUM,GAAoBA,GAAXF,EACM,aAAeX,EAAIb,KAAO,gBAAkBoB,EAAS,MAAOI,EAE5D,yBA3B9BlB,EAAI,EAAGA,EAAIT,KAAKC,SAASiC,OAAQzB,MAAjCA,IAoCVX,EAAAO,UAAA8B,eAAA,WAEE,MAAO,KAAO,SADFC,KAAKC,MAAM,SAAYD,KAAKE,UAAUC,SAAS,KAC3BC,OAAO,IAhD9B1C,EAAmB2C,WAAA,CAL/B7C,OAAA8C,UAAU,CACTC,SAAU,kBACVC,YAAa,+BACbC,UAAW,CAAC,kCAED/C,GAAb,GAAagD,QAAAhD,oBAAAA","file":"add-meeting.component.min.js","sourcesContent":["import { Component, OnInit,ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef, } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-add-meeting',\n  templateUrl: './add-meeting.component.html',\n  styleUrls: ['./add-meeting.component.css']\n})\nexport class AddMeetingComponent implements OnInit {\n  allRooms = [{id:1, name: 'Room 1', status:'Available'},{id:2, name: 'Room 2', status:'Available'},{id:3, name: 'Room 3', status:'Available'},{id:4, name: 'Room 4', status:'Available'},{id:5, name: 'Room 5', status:'Available'},{id:6, name: 'Room 6', status:'Available'},{id:7, name: 'Room 7', status:'Available'},{id:8, name: 'Room 8', status:'Available'},{id:9, name: 'Room 9',status:'Available'},{id:10, name: 'Room 10', status:'Available'},];\n  \n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getStatus();\n  }\n\n  getStatus(){\n    for(let x = 0; x < this.allRooms.length; x++){\n      this.http.post('http://localhost:8080/get_rooms',  {id:this.allRooms[x].id}).subscribe((res)=>{\n        if(res['response'][0]){\n          if(this.allRooms[x].id == res['response'][0].room_id){\n            this.allRooms[x]['meetings'] = res['response'];\n\n            this.allRooms[x]['meetings'].forEach(ele => {\n\n              let currentDate = new Date();\n              const sTime = ele.start_time;\n              const t1: any = sTime.split(' ');\n              const t2: any = t1[0].split(':');\n              t2[0] = (t1[1] === 'PM' ? (1*t2[0] + 12) : t2[0]);\n              const time24 = (t2[0] < 10 ? '0' + t2[0] : t2[0]) + ':' + t2[1];\n\n              const eTime = ele.end_time;\n              const et1: any = eTime.split(' ');\n              const et2: any = et1[0].split(':');\n              et2[0] = (et1[1] === 'PM' ? (1*et2[0] + 12) : et2[0]);\n              const etime24 = (et2[0] < 10 ? '0' + et2[0] : et2[0]) + ':' + et2[1];\n            \n              const xy = new Date(currentDate);\n              const cTime = xy.getHours() + ':' + xy.getMinutes()\n               console.log(ele);\n              if(time24 <= cTime && etime24 >= cTime){\n                this.allRooms[x].status = 'Booked by ' + ele.name + ' - Duration :' + time24 + ' - ' +etime24;\n              } else {\n                this.allRooms[x].status = 'Available';\n              }\n            });\n          }\n        }\n      });  \n    }\n  }\n\n  getRandomColor() {\n    var color = Math.floor(0x1000000 * Math.random()).toString(16);\n    return '#' + ('000000' + color).slice(-6);\n  }\n}"]}